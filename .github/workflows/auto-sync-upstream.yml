name: Auto-sync with upstream Hyprland
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  sync-and-build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    outputs:
      has_changes: ${{ steps.sync.outputs.has_changes }}
      version: ${{ steps.sync.outputs.version }}
      pkgver: ${{ steps.sync.outputs.pkgver }}
    steps:
      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel git cmake ninja pkg-config meson \
              wayland wayland-protocols libxkbcommon pixman glslang \
              vulkan-headers vulkan-validation-layers libdrm mesa \
              cairo pango gdb gcc xorgproto libliftoff libdisplay-info \
              libxcomposite libxdamage libxrender libx11 libxcb libxext \
              libxfixes libxi libxrandr xcb-proto xcb-util xcb-util-keysyms xcb-util-wm \
              libseat libinput

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global --add safe.directory '*'

      - name: Check and sync upstream
        id: sync
        run: |
          echo "Checking upstream..."
          git remote add upstream https://github.com/hyprwm/Hyprland.git
          git fetch upstream
          
          UPSTREAM_HASH=$(git rev-parse upstream/main)
          CURRENT_HASH=$(git rev-parse HEAD)
          
          if [ "$UPSTREAM_HASH" != "$CURRENT_HASH" ]; then
            echo "New changes found"
            if git merge upstream/main --no-edit; then
              git push origin main
              NEW_VERSION=$(date +"%Y.%m.%d")-$(echo $UPSTREAM_HASH | cut -c1-8)
              PKG_VERSION=$(echo "$NEW_VERSION" | sed 's/-/./g')
              echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
              echo "pkgver=$PKG_VERSION" >> $GITHUB_OUTPUT
              echo "has_changes=true" >> $GITHUB_OUTPUT
            else
              git merge --abort
              echo "has_changes=false" >> $GITHUB_OUTPUT
              exit 1
            fi
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create PKGBUILD
        if: steps.sync.outputs.has_changes == 'true'
        run: |
          cat > PKGBUILD << 'EOF'
          pkgname=hyprland-fork
          pkgver=${{ steps.sync.outputs.pkgver }}
          pkgrel=1
          pkgdesc="A dynamic tiling Wayland compositor - Custom Fork"
          arch=('x86_64')
          url="https://github.com/Stayroh/Hyprland_Tweaks"
          license=('BSD')
          depends=(
              'libxkbcommon'
              'libxkbcommon-x11'
              'pixman'
              'wayland'
              'cairo'
              'pango'
              'hyprcursor'
              'hyprlang'
              'hyprutils'
              'hyprwayland-scanner'
              'xcb-proto'
              'xcb-util'
              'xcb-util-keysyms'
              'xcb-util-wm'
              'xorg-xinput'
              'libdrm'
              'libxcomposite'
              'libxdamage'
              'libxrender'
              'libx11'
              'libxcb'
              'libxext'
              'libxfixes'
              'libxi'
              'libxrandr'
              'wayland-protocols'
              'mesa'
              'libseat'
              'libinput'
          )
          makedepends=(
              'git'
              'cmake'
              'ninja'
              'gcc'
              'gdb'
              'meson'
              'vulkan-headers'
              'vulkan-validation-layers'
              'xorgproto'
              'glslang'
              'libliftoff'
              'libdisplay-info'
          )
          source=("git+https://github.com/Stayroh/Hyprland_Tweaks.git#commit=${{ github.sha }}")
          sha256sums=('SKIP')
          provides=('hyprland')
          conflicts=('hyprland')

          prepare() {
              cd "$srcdir/Hyprland_Tweaks"
              
              # Initialize and update submodules
              git submodule update --init --recursive
              
              # Build aquamarine dependency
              if ! pkg-config --exists aquamarine; then
                  if [ ! -d "../aquamarine" ]; then
                      cd "$srcdir"
                      git clone https://github.com/hyprwm/aquamarine.git --depth 1
                      cd aquamarine
                      cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -B build
                      cmake --build build --config Release
                      sudo cmake --install build
                      cd "$srcdir/Hyprland_Tweaks"
                  fi
              fi
          }

          build() {
              cd "$srcdir/Hyprland_Tweaks"
              make all
          }

          package() {
              cd "$srcdir/Hyprland_Tweaks"
              make install DESTDIR="$pkgdir" PREFIX="/usr"
          }
          EOF

      - name: Build package
        if: steps.sync.outputs.has_changes == 'true'
        run: |
          useradd -m builder
          chown -R builder:builder .
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          sudo -u builder makepkg -s --noconfirm

      - name: Create release and upload package
        if: steps.sync.outputs.has_changes == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.sync.outputs.version }}
          name: Hyprland Fork v${{ steps.sync.outputs.version }}
          body: |
            Auto-generated release with upstream sync
            Upstream commit: ${{ github.sha }}
            Package version: ${{ steps.sync.outputs.pkgver }}
          files: |
            *.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
