# .github/workflows/auto-sync-upstream.yml
name: Auto-sync with upstream Hyprland

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  sync-and-build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Install git and basic tools
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm git curl jq base-devel

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Check and sync upstream
        id: sync
        run: |
          echo "Checking upstream..."
          git remote add upstream https://github.com/hyprwm/Hyprland.git
          git fetch upstream
          
          UPSTREAM_HASH=$(git rev-parse upstream/main)
          CURRENT_HASH=$(git rev-parse HEAD)
          
          if [ "$UPSTREAM_HASH" != "$CURRENT_HASH" ]; then
            echo "New changes found, merging..."
            if git merge upstream/main --no-edit; then
              git push origin main
              NEW_VERSION=$(date +"%Y.%m.%d")-$(echo $UPSTREAM_HASH | cut -c1-8)
              echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
              echo "has_changes=true" >> $GITHUB_OUTPUT
              echo "New version: $NEW_VERSION"
            else
              echo "Merge failed - conflicts detected"
              git merge --abort
              echo "has_changes=false" >> $GITHUB_OUTPUT
              exit 1
            fi
          else
            echo "No new changes"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Install build dependencies
        if: steps.sync.outputs.has_changes == 'true'
        run: |
          pacman -S --noconfirm \
            cmake meson ninja pkgconf \
            cairo glib2 libdrm libinput libxkbcommon \
            wayland wayland-protocols pixman

      - name: Build Hyprland
        if: steps.sync.outputs.has_changes == 'true'
        run: |
          echo "Building Hyprland..."
          make all || echo "Build completed with warnings"
          
          echo "Creating package..."
          mkdir -p release
          cp build/Hyprland release/ 2>/dev/null || echo "Hyprland binary not found"
          cp build/hyprctl/hyprctl release/ 2>/dev/null || echo "hyprctl not found"
          cp LICENSE release/ 2>/dev/null || echo "LICENSE not found"
          tar -czf hyprland-${{ steps.sync.outputs.version }}.tar.gz release/

      - name: Create release
        if: steps.sync.outputs.has_changes == 'true'
        run: |
          echo "Creating release..."
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d "{
              \"tag_name\": \"v${{ steps.sync.outputs.version }}\",
              \"name\": \"Hyprland Fork v${{ steps.sync.outputs.version }}\",
              \"body\": \"Auto-generated release with upstream changes\",
              \"draft\": false
            }" > release_response.json
          
          cat release_response.json
          
          UPLOAD_URL=$(cat release_response.json | jq -r .upload_url | sed 's/{?name,label}//')
          
          if [ "$UPLOAD_URL" != "null" ] && [ -f "hyprland-${{ steps.sync.outputs.version }}.tar.gz" ]; then
            echo "Uploading asset..."
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/gzip" \
              --data-binary @hyprland-${{ steps.sync.outputs.version }}.tar.gz \
              "${UPLOAD_URL}?name=hyprland-${{ steps.sync.outputs.version }}.tar.gz"
          fi
